spring.datasource.url=jdbc:mysql://HOSTXXXXXXXXXXXXXXX
spring.datasource.username=XXXXXXXXXXXXXXX
spring.datasource.password=XXXXXXXXXXXXXXX
spring.sql.init.continue-on-error=true
spring.profiles.active=dev
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.jpa.properties.jakarta.persistence.sharedCache.mode=DISABLE_SELECTIVE

# MongoDB - Not used in this project
#spring.data.mongodb.uri=XXXXXXXXXXXXXXXXX
#spring.data.mongodb.database=XXXXXXXXXXXXXXX

# Recommended logging configuration
spring.jpa.properties.hibernate.generate_statistics=true
spring.jackson.serialization.fail-on-empty-beans=false
spring.sql.init.platform=mysql

# For initialization change ONE time to "always" and then back to "never"
# But I recommend to use firstrun method
spring.sql.init.mode=never
spring.sql.init.data-locations=classpath:data-mysql.sql
#spring.jackson.serialization.write-dates-as-timestamps=false

# Never show null values
#spring.jackson.default-property-inclusion=non_null

# Hibernate ddl auto (create, create-drop, validate, update, none)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect
spring.jpa.open-in-view=false

# works for h2 only :-/
# spring.sql.init.mode=none
# spring.sql.init.schema-locations=classpath:schema.sql
# spring.sql.init.data-locations=classpath:data-mysql.sql

# server.port=8080
server.error.path=/error
server.error.whitelabel.enabled=false
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration
#spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false
spring.main.banner-mode=console
spring.output.ansi.enabled=always
spring.devtools.add-properties=true
# springdoc.api-docs.path=/api-docs
# springdoc.swagger-ui.path=/swagger-ui-custom.html

#spring.thymeleaf.cache=false
#spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.application.name=Supply Chain Management
# Your desired user name
spring.security.user.name=web
spring.main.lazy-initialization=true

# App Properties
app.name=${spring.application.name}
app.description=${app.name} demo project to show SCM processes
app.jwtSecret=asdfSFS34wfsdfsdfSDSD32dfsddDDerQSNCK34SOWEK5354fdgdf4supergeheimerkeyderunwahrscheinlichzuknackenistabernichtunmoeglich123unddazunocheinpaartollebuchstabenundrechtschreibFehlerjuchudasgehtab
app.jwtExpirationMs=143856000
#1000*60*24*999
#86400000
app.jwtCookieName=waldicookie
app.mysqlfile=/data-mysql.sql
app.debug=true

management.endpoints.web.exposure.include=health,info,beans,condition,shutdown,env,auditevents,metrics,mappings,logfile,scheduledtasks,loggers,openapi,swagger-ui,openapi-docs,openapi-ui,startup
management.endpoints.jmx.exposure.include=*
management.endpoint.health.show-details=always
management.endpoint.shutdown.enabled=true
management.endpoints.enabled-by-default=true
management.info.env.enabled=true

# Actuator properties
info.app.name=Spring Boot Actuator Dashboard
info.app.description=Spring Boot backend to demonstrate actuator APIs
info.app.version=1.0

logging.level.org.hibernate.type.descriptor.sql.BasicBinder=trace
logging.level.org.springframework.web=debug
logging.level.org.hibernate=error
logging.file.name=application.log
#logging.level.root=INFO
logging.level.web=DEBUG
logging.level.org.hibernate.stat=DEBUG
logging.level.org.hibernate.SQL=DEBUG

springdoc.show-actuator=true
springdoc.swagger-ui.showExtensions=true
springdoc.use-management-port=true
management.server.port=9090